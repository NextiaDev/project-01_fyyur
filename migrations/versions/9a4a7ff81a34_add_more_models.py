"""Add more models

Revision ID: 9a4a7ff81a34
Revises: c9668c25efd5
Create Date: 2020-04-13 04:31:39.381307

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9a4a7ff81a34'
down_revision = 'c9668c25efd5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Album',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Genre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('State',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Song',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('album_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['album_fk'], ['Album.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Artist_availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_time_start', sa.DateTime(), nullable=True),
    sa.Column('date_time_end', sa.DateTime(), nullable=True),
    sa.Column('artist', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artist'], ['Artist.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('album_artist',
    sa.Column('Artist', sa.Integer(), nullable=False),
    sa.Column('Album', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Album'], ['Album.id'], ),
    sa.ForeignKeyConstraint(['Artist'], ['Artist.id'], ),
    sa.PrimaryKeyConstraint('Artist', 'Album')
    )
    op.create_table('genres_artist',
    sa.Column('Artist', sa.Integer(), nullable=False),
    sa.Column('Genre', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Artist'], ['Artist.id'], ),
    sa.ForeignKeyConstraint(['Genre'], ['Genre.id'], ),
    sa.PrimaryKeyConstraint('Artist', 'Genre')
    )
    op.create_table('genres_venue',
    sa.Column('Venue', sa.Integer(), nullable=False),
    sa.Column('Genre', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Genre'], ['Genre.id'], ),
    sa.ForeignKeyConstraint(['Venue'], ['Venue.id'], ),
    sa.PrimaryKeyConstraint('Venue', 'Genre')
    )
    op.add_column('Artist', sa.Column('state_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'Artist', 'State', ['state_fk'], ['id'])
    op.add_column('Venue', sa.Column('state_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'Venue', 'State', ['state_fk'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'Venue', type_='foreignkey')
    op.drop_column('Venue', 'state_fk')
    op.drop_constraint(None, 'Artist', type_='foreignkey')
    op.drop_column('Artist', 'state_fk')
    op.drop_table('genres_venue')
    op.drop_table('genres_artist')
    op.drop_table('album_artist')
    op.drop_table('Artist_availability')
    op.drop_table('Song')
    op.drop_table('State')
    op.drop_table('Genre')
    op.drop_table('Album')
    # ### end Alembic commands ###
